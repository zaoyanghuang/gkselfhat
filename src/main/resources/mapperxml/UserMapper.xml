<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gnw.mapper.UserMapper">
    <!--查询本公司所有账号 admin查询所有
    账号不多情况下直接分页   超过100页在考虑子查询分页
    SQL代码1：平均用时6.6秒 SELECT * FROM `cdb_posts` ORDER BY pid LIMIT 1000000 , 30
    SQL代码2：平均用时0.6秒 SELECT * FROM `cdb_posts` WHERE pid >= (SELECT pid FROM
    `cdb_posts` ORDER BY pid LIMIT 1000000 , 1) LIMIT 30
    -->
    <sql id="user_role_authority_info">
        userName,passWords,realName,phoneNumber,createTime,companyBelong,userRole,authority
    </sql>
    <select id="selAllByCompany" resultType="com.gnw.pojo.UserRoleAuthority">
        select
        <include refid="user_role_authority"/>
            from gk_user_role_authority
        where
            'adminServer'=#{cellPhone,jdbcType=VARCHAR} or companyBelong=#{companyBelong,jdbcType=VARCHAR}
        order by uid limit (#{pageNum,jdbcType=INTEGER}-1)*8,#{lineNum,jdbcType=INTEGER}
    </select>
    <!--通过userName查询本公司的账号-->
    <select id="selByUserName" resultType="com.gnw.pojo.UserRoleAuthority">
        select
        <include refid="user_role_authority"/>
             from gk_user_role_authority
        where ('adminServer'=#{cellPhone,jdbcType=VARCHAR} or companyBelong=#{companyBelong,jdbcType=VARCHAR})
        and
             userName like #{userName,jdbcType=VARCHAR}+'%'
    </select>
    <!--查询所有的公司名字-->
    <select id="selAllCompany" resultType="String">
        select companyName from gk_company
    </select>
    <!--更新账号信息 String passWords,String realName,String phoneNumber,String companyBelong,String authority,String userName-->
    <update id="updateUserInfo">
        update gk_company
        set
        passWords = #{passWords,jdbcType=VARCHAR},realName = #{realName,jdbcType=VARCHAR},
        phoneNumber = #{phoneNumber,jdbcType=VARCHAR},companyBelong = #{companyBelong,jdbcType=VARCHAR},
        authority = #{authority,jdbcType=VARCHAR}
        where
        userName = #{userName,jdbcType=VARCHAR}
    </update>
    <!--新增用户
    * 仅角色adminServer有权添加登录账号
    * 添加的账号根据公司名称分配角色：客户公司分配角色(userName+Client)对应唯一权限 服务商分配角色（adminServer）对应
    * 默认密码666666-->
    <insert id="insertUserInfo" parameterType="com.gnw.pojo.UserInfo">
        insert into gk_user(userName,passWords,realName,phoneNumber,createTime,companyBelong,userRole)
        values
        (#{userName,jdbcType=VARCHAR},#{passWords,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},
        #{phoneNumber,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{companyBelong,jdbcType=VARCHAR},
        #{userRole,jdbcType=VARCHAR},)
    </insert>
    <insert id="insertRoleAuthority" parameterType="com.gnw.pojo.UserRoleAuthority">
        insert into gk_role_authority(userRole,authority)
        values
        (#{userRole,jdbcType=VARCHAR},#{authority,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR})
    </insert>
</mapper>